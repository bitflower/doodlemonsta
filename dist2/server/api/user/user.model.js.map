{"version":3,"sources":["api/user/user.model.js"],"names":[],"mappings":"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","file":"api/user/user.model.js","sourcesContent":["'use strict';\n\nimport crypto from 'crypto';\nvar mongoose = require('bluebird').promisifyAll(require('mongoose'));\nimport { Schema } from 'mongoose';\n\nconst authTypes = ['github', 'twitter', 'facebook', 'google'];\n\nvar UserSchema = new Schema({\n    name: {\n        type: String\n    },\n    email: {\n        type: String,\n        lowercase: true\n    },\n    role: {\n        type: String,\n        default: 'user'\n    },\n    password: {\n        type: String\n    },\n    provider: {\n        type: String\n    },\n    salt: {\n        type: String\n    },\n    signedUp: {\n        type: Date,\n        default: Date.now\n    },\n    lastLogin: {\n        type: Date,\n        default: Date.now\n    },\n    devices: [{\n        os: {\n            type: String\n        },\n        userAgent: {\n            type: String\n        },\n        pushToken: {\n            type: String\n        }\n    }],\n    facebook: {},\n    github: {},\n    friends: [{\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n    }]\n});\n\n/**\n * Virtuals\n */\n\n// Public profile information\nUserSchema\n    .virtual('profile')\n    .get(function() {\n        return {\n            '_id': this._id, // Wieder entfernen!\n            'name': this.name,\n            'role': this.role\n        };\n    });\n\n// Non-sensitive info we'll be putting in the token\nUserSchema\n    .virtual('token')\n    .get(function() {\n        return {\n            '_id': this._id,\n            'role': this.role\n        };\n    });\n\n/**\n * Validations\n */\n\n// Validate empty email\nUserSchema\n    .path('email')\n    .validate(function(email) {\n        if (authTypes.indexOf(this.provider) !== -1) {\n            return true;\n        }\n        return email.length;\n    }, 'Email cannot be blank');\n\n// Validate empty password\nUserSchema\n    .path('password')\n    .validate(function(password) {\n        if (authTypes.indexOf(this.provider) !== -1) {\n            return true;\n        }\n        return password.length;\n    }, 'Password cannot be blank');\n\n// Validate email is not taken\nUserSchema\n    .path('email')\n    .validate(function(value, respond) {\n        var self = this;\n        return this.constructor.findOneAsync({ email: value })\n            .then(function(user) {\n                if (user) {\n                    if (self.id === user.id) {\n                        return respond(true);\n                    }\n                    return respond(false);\n                }\n                return respond(true);\n            })\n            .catch(function(err) {\n                throw err;\n            });\n    }, 'The specified email address is already in use.');\n\nvar validatePresenceOf = function(value) {\n    return value && value.length;\n};\n\nUserSchema.set('toObject', {\n    virtuals: true\n});\nUserSchema.set('toJSON', {\n    virtuals: true\n});\n\n/**\n * Pre-save hook\n */\nUserSchema\n    .pre('save', function(next) {\n        // Handle new/update passwords\n        if (!this.isModified('password')) {\n            return next();\n        }\n\n        if (!validatePresenceOf(this.password) && authTypes.indexOf(this.provider) === -1) {\n            next(new Error('Invalid password'));\n        }\n\n        // Make salt with a callback\n        this.makeSalt((saltErr, salt) => {\n            if (saltErr) {\n                next(saltErr);\n            }\n            this.salt = salt;\n            this.encryptPassword(this.password, (encryptErr, hashedPassword) => {\n                if (encryptErr) {\n                    next(encryptErr);\n                }\n                this.password = hashedPassword;\n                next();\n            });\n        });\n    });\n\n/**\n * Methods\n */\nUserSchema.methods = {\n    /**\n     * Authenticate - check if the passwords are the same\n     *\n     * @param {String} password\n     * @param {Function} callback\n     * @return {Boolean}\n     * @api public\n     */\n    authenticate(password, callback) {\n        if (!callback) {\n            return this.password === this.encryptPassword(password);\n        }\n\n        this.encryptPassword(password, (err, pwdGen) => {\n            if (err) {\n                return callback(err);\n            }\n\n            if (this.password === pwdGen) {\n                callback(null, true);\n            } else {\n                callback(null, false);\n            }\n        });\n    },\n\n    /**\n     * Make salt\n     *\n     * @param {Number} byteSize Optional salt byte size, default to 16\n     * @param {Function} callback\n     * @return {String}\n     * @api public\n     */\n    makeSalt(byteSize, callback) {\n        var defaultByteSize = 16;\n\n        if (typeof arguments[0] === 'function') {\n            callback = arguments[0];\n            byteSize = defaultByteSize;\n        } else if (typeof arguments[1] === 'function') {\n            callback = arguments[1];\n        }\n\n        if (!byteSize) {\n            byteSize = defaultByteSize;\n        }\n\n        if (!callback) {\n            return crypto.randomBytes(byteSize).toString('base64');\n        }\n\n        return crypto.randomBytes(byteSize, (err, salt) => {\n            if (err) {\n                callback(err);\n            } else {\n                callback(null, salt.toString('base64'));\n            }\n        });\n    },\n\n    /**\n     * Encrypt password\n     *\n     * @param {String} password\n     * @param {Function} callback\n     * @return {String}\n     * @api public\n     */\n    encryptPassword(password, callback) {\n        if (!password || !this.salt) {\n            return null;\n        }\n\n        var defaultIterations = 10000;\n        var defaultKeyLength = 64;\n        var salt = new Buffer(this.salt, 'base64');\n\n        if (!callback) {\n            return crypto.pbkdf2Sync(password, salt, defaultIterations, defaultKeyLength)\n                .toString('base64');\n        }\n\n        return crypto.pbkdf2(password, salt, defaultIterations, defaultKeyLength, (err, key) => {\n            if (err) {\n                callback(err);\n            } else {\n                callback(null, key.toString('base64'));\n            }\n        });\n    }\n};\n\nexport default mongoose.model('User', UserSchema);\n"],"sourceRoot":"/source/"}