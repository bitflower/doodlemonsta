{"version":3,"sources":["api/monsta/monsta.model.js"],"names":[],"mappings":"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","file":"api/monsta/monsta.model.js","sourcesContent":["'use strict';\n\nvar mongoose = require('bluebird').promisifyAll(require('mongoose'));\nimport { Schema } from 'mongoose';\n\n// Plugins\nvar autoIncrement = require('bluebird').promisifyAll(require('mongoose-auto-increment'));\nvar deepPopulate = require('mongoose-deep-populate')(mongoose);\n\nvar MonstaSchema = new mongoose.Schema({\n    version: {\n        type: Number,\n        default: 1.0\n    },\n    name: String,\n    createdOn: {\n        type: Date,\n        default: Date.now\n    },\n    head: {\n        paperjs: [],\n        crossLines: [],\n        canvas: {\n            width: {\n                type: Number,\n                default: 0\n            },\n            height: {\n                type: Number,\n                default: 0\n            },\n            devicePixelRatio: {\n                type: Number,\n                default: 1\n            }\n        },\n        user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n        }\n    },\n    stomach: {\n        paperjs: [],\n        crossLines: [],\n        canvas: {\n            width: {\n                type: Number,\n                default: 0\n            },\n            height: {\n                type: Number,\n                default: 0\n            },\n            devicePixelRatio: {\n                type: Number,\n                default: 1\n            }\n        },\n        user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n        }\n    },\n    legs: {\n        paperjs: [],\n        crossLines: [],\n        canvas: {\n            width: {\n                type: Number,\n                default: 0\n            },\n            height: {\n                type: Number,\n                default: 0\n            },\n            devicePixelRatio: {\n                type: Number,\n                default: 1\n            }\n        },\n        user: {\n            type: Schema.Types.ObjectId,\n            ref: 'User'\n        }\n    },\n    complete: {\n        paperjs: [],\n        crossLines: [],\n        canvas: {\n            width: {\n                type: Number,\n                default: 0\n            },\n            height: {\n                type: Number,\n                default: 0\n            }\n        }\n    }\n});\n\n// needs Information\nMonstaSchema\n    .virtual('needs')\n    .get(function() {\n\n        if (this.head.paperjs.length === 0) {\n            return 'head';\n        } else {\n            if (this.stomach.paperjs.length === 0) {\n                return 'stomach';\n            } else {\n                if (this.legs.paperjs.length === 0) {\n                    return 'legs';\n                } else {\n                    return 'complete';\n                }\n            }\n        }\n    });\n\nMonstaSchema.set('toJSON', {\n    virtuals: true\n});\n\n// Auto increment _id as per standard\nMonstaSchema.plugin(autoIncrement.plugin, {\n    model: 'Monsta',\n    startAt: 1\n});\n\nMonstaSchema.plugin(deepPopulate);\n// MonstaSchema.plugin(deepPopulate, {\n//     populate: {\n//         'head.user': {\n//             select: 'profile'\n//         }\n//     }\n// });\n// MonstaSchema.plugin(deepPopulate, {\n//     populate: 'head.user'\n\n//     // populate: {\n//     //     'head.user': {\n//     //         select: 'name'\n//     //     }\n//     // }\n// });\n\nexport default mongoose.model('Monsta', MonstaSchema);\n"],"sourceRoot":"/source/"}